package entities;
// Generated 19/05/2015 04:34:31 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DocumentStatus generated by hbm2java
 */
@Entity
@Table(name="document_status"
    ,schema="public"
)
public class DocumentStatus  implements java.io.Serializable {


     private int id;
     private String statusName;
     private Set<OrderHeader> orderHeaders = new HashSet<OrderHeader>(0);
     private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);

    public DocumentStatus() {
    }

	
    public DocumentStatus(int id) {
        this.id = id;
    }
    public DocumentStatus(int id, String statusName, Set<OrderHeader> orderHeaders, Set<InvoiceHeader> invoiceHeaders) {
       this.id = id;
       this.statusName = statusName;
       this.orderHeaders = orderHeaders;
       this.invoiceHeaders = invoiceHeaders;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="status_name", length=30)
    public String getStatusName() {
        return this.statusName;
    }
    
    public void setStatusName(String statusName) {
        this.statusName = statusName;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentStatus")
    public Set<OrderHeader> getOrderHeaders() {
        return this.orderHeaders;
    }
    
    public void setOrderHeaders(Set<OrderHeader> orderHeaders) {
        this.orderHeaders = orderHeaders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentStatus")
    public Set<InvoiceHeader> getInvoiceHeaders() {
        return this.invoiceHeaders;
    }
    
    public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
        this.invoiceHeaders = invoiceHeaders;
    }




}


