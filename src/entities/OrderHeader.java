package entities;
// Generated 19/05/2015 04:34:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrderHeader generated by hbm2java
 */
@Entity
@Table(name="order_header"
    ,schema="public"
)
public class OrderHeader  implements java.io.Serializable {


     private int id;
     private Customer customer;
     private DocumentStatus documentStatus;
     private User user;
     private Date orderDate;
     private String notes;
     private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
     private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);

    public OrderHeader() {
    }

	
    public OrderHeader(int id, Customer customer, DocumentStatus documentStatus, User user) {
        this.id = id;
        this.customer = customer;
        this.documentStatus = documentStatus;
        this.user = user;
    }
    public OrderHeader(int id, Customer customer, DocumentStatus documentStatus, User user, Date orderDate, String notes, Set<OrderDetail> orderDetails, Set<InvoiceHeader> invoiceHeaders) {
       this.id = id;
       this.customer = customer;
       this.documentStatus = documentStatus;
       this.user = user;
       this.orderDate = orderDate;
       this.notes = notes;
       this.orderDetails = orderDetails;
       this.invoiceHeaders = invoiceHeaders;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customer_id", nullable=false)
    public Customer getCustomer() {
        return this.customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status_id", nullable=false)
    public DocumentStatus getDocumentStatus() {
        return this.documentStatus;
    }
    
    public void setDocumentStatus(DocumentStatus documentStatus) {
        this.documentStatus = documentStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="order_date", length=29)
    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    
    @Column(name="notes")
    public String getNotes() {
        return this.notes;
    }
    
    public void setNotes(String notes) {
        this.notes = notes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader")
    public Set<InvoiceHeader> getInvoiceHeaders() {
        return this.invoiceHeaders;
    }
    
    public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
        this.invoiceHeaders = invoiceHeaders;
    }




}


