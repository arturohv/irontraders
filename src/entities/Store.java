package entities;
// Generated 19/05/2015 04:34:31 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name="store"
    ,schema="public"
)
public class Store  implements java.io.Serializable {


     private int id;
     private String storeName;
     private Boolean isDefault;
     private Set<StockLevelProduct> stockLevelProducts = new HashSet<StockLevelProduct>(0);
     private Set<Inventory> inventories = new HashSet<Inventory>(0);

    public Store() {
    }

	
    public Store(int id) {
        this.id = id;
    }
    public Store(int id, String storeName, Boolean isDefault, Set<StockLevelProduct> stockLevelProducts, Set<Inventory> inventories) {
       this.id = id;
       this.storeName = storeName;
       this.isDefault = isDefault;
       this.stockLevelProducts = stockLevelProducts;
       this.inventories = inventories;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="store_name", length=40)
    public String getStoreName() {
        return this.storeName;
    }
    
    public void setStoreName(String storeName) {
        this.storeName = storeName;
    }

    
    @Column(name="is_default")
    public Boolean getIsDefault() {
        return this.isDefault;
    }
    
    public void setIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="store")
    public Set<StockLevelProduct> getStockLevelProducts() {
        return this.stockLevelProducts;
    }
    
    public void setStockLevelProducts(Set<StockLevelProduct> stockLevelProducts) {
        this.stockLevelProducts = stockLevelProducts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="store")
    public Set<Inventory> getInventories() {
        return this.inventories;
    }
    
    public void setInventories(Set<Inventory> inventories) {
        this.inventories = inventories;
    }




}


