package entities;
// Generated 19/05/2015 04:34:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames={"user_name", "email"}) 
)
public class User  implements java.io.Serializable {


     private int id;
     private Person person;
     private String userName;
     private String email;
     private String password;
     private Date registrationDate;
     private boolean isActive;
     private boolean isAdmin;
     private Set<RoleUser> roleUsers = new HashSet<RoleUser>(0);
     private Set<Inventory> inventories = new HashSet<Inventory>(0);
     private Set<OrderHeader> orderHeaders = new HashSet<OrderHeader>(0);
     private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);

    public User() {
    }

	
    public User(Person person, String userName, String email, String password, boolean isActive, boolean isAdmin) {
        this.person = person;
        this.userName = userName;
        this.email = email;
        this.password = password;
        this.isActive = isActive;
        this.isAdmin = isAdmin;
    }
    public User(Person person, String userName, String email, String password, Date registrationDate, boolean isActive, boolean isAdmin, Set<RoleUser> roleUsers, Set<Inventory> inventories, Set<OrderHeader> orderHeaders, Set<InvoiceHeader> invoiceHeaders) {
       this.person = person;
       this.userName = userName;
       this.email = email;
       this.password = password;
       this.registrationDate = registrationDate;
       this.isActive = isActive;
       this.isAdmin = isAdmin;
       this.roleUsers = roleUsers;
       this.inventories = inventories;
       this.orderHeaders = orderHeaders;
       this.invoiceHeaders = invoiceHeaders;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="person"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public Person getPerson() {
        return this.person;
    }
    
    public void setPerson(Person person) {
        this.person = person;
    }

    
    @Column(name="user_name", nullable=false, length=60)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="email", nullable=false, length=60)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", nullable=false, length=60)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="registration_date", length=29)
    public Date getRegistrationDate() {
        return this.registrationDate;
    }
    
    public void setRegistrationDate(Date registrationDate) {
        this.registrationDate = registrationDate;
    }

    
    @Column(name="is_active", nullable=false)
    public boolean isIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    
    @Column(name="is_admin", nullable=false)
    public boolean isIsAdmin() {
        return this.isAdmin;
    }
    
    public void setIsAdmin(boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<RoleUser> getRoleUsers() {
        return this.roleUsers;
    }
    
    public void setRoleUsers(Set<RoleUser> roleUsers) {
        this.roleUsers = roleUsers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Inventory> getInventories() {
        return this.inventories;
    }
    
    public void setInventories(Set<Inventory> inventories) {
        this.inventories = inventories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<OrderHeader> getOrderHeaders() {
        return this.orderHeaders;
    }
    
    public void setOrderHeaders(Set<OrderHeader> orderHeaders) {
        this.orderHeaders = orderHeaders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<InvoiceHeader> getInvoiceHeaders() {
        return this.invoiceHeaders;
    }
    
    public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
        this.invoiceHeaders = invoiceHeaders;
    }




}


